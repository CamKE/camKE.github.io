{
  "api/Global.Cell.CellStatus.html": {
    "href": "api/Global.Cell.CellStatus.html",
    "title": "Enum Cell.CellStatus | Project documentation",
    "keywords": "Enum Cell.CellStatus Enumeration of cell states. Used to distinguish the various cells from eachother. Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum CellStatus Fields Name Description InvalidCell LakeCell RiverCell TerrainCell ValidCell WalkpathCell"
  },
  "api/Global.Cell.html": {
    "href": "api/Global.Cell.html",
    "title": "Class Cell | Project documentation",
    "keywords": "Class Cell Represents a single space on the map for a tile to be potentially placed. Inheritance Object Cell Implements IHeapItem < Cell > IComparable < Cell > Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Cell : IHeapItem<Cell> Constructors Cell(Vector3Int, Cell.CellStatus) Constructor for Cell. Must set an initial postions and status. Declaration public Cell(Vector3Int position, Cell.CellStatus status = Cell.CellStatus.ValidCell) Parameters Type Name Description Vector3Int position The position of the cell on the Map, including its depth (z). Cell.CellStatus status Denotes the cells current state. Fields gCost The cost of traversal between the start cell and the cell. Declaration public int gCost Field Value Type Description Int32 hCost The estimated cost of traversal from the cell to the end goal cell. Declaration public int hCost Field Value Type Description Int32 isTraversable Denotes whether the cell is able to be travelled across. Declaration public bool isTraversable Field Value Type Description Boolean isWaterBound Denotes whether the cell is a water boundary; that is , if the cell is adjacent to water. Declaration public bool isWaterBound Field Value Type Description Boolean onBoundary Denotes whether the cell is on the boundary; that is, if the cell neighours an invalid cell or is at the end of the map. Declaration public bool onBoundary Field Value Type Description Boolean parent The parent of the current cell. Used for path generation. Declaration public Cell parent Field Value Type Description Cell position The position of the cell on the Map, including its depth (z). Declaration public Vector3Int position Field Value Type Description Vector3Int status Denotes the cells current state. Declaration public Cell.CellStatus status Field Value Type Description Cell.CellStatus Properties HeapIndex Getter and setter for the heap index. Declaration public int HeapIndex { get; set; } Property Value Type Description Int32 Methods CompareTo(Cell) Used to order cells in the heap based on lowest fCost or hCost first. Used during path generation. Declaration public int CompareTo(Cell otherCell) Parameters Type Name Description Cell otherCell The cell to compare to. Returns Type Description Int32 The priority of the cell relative to the other cell. -1 for lower priority, 0 for same priority, and 1 for higher priority. fCost() Calculates the f cost, which is a sum of the g cost and h cost. Declaration public int fCost() Returns Type Description Int32 The f cost. setCellStatus(Cell.CellStatus, Boolean) Sets the cell's status to a new status. Declaration public void setCellStatus(Cell.CellStatus newStatus, bool intersectionsEnabled = false) Parameters Type Name Description Cell.CellStatus newStatus The new status to set the cell to. Boolean intersectionsEnabled Whether intersections are enabled. For path generation. Optional parameter. Implements IHeapItem<T> IComparable<>"
  },
  "api/Global.CellPair.html": {
    "href": "api/Global.CellPair.html",
    "title": "Class CellPair | Project documentation",
    "keywords": "Class CellPair Represents the start and end cell of a path. Inheritance Object CellPair Implements IHeapItem < CellPair > IComparable < CellPair > Namespace : Global Assembly : cs.temp.dll.dll Syntax public class CellPair : IHeapItem<CellPair> Constructors CellPair(Cell, Cell, Int32) Constructor for the CellPair. Distance is optional. Declaration public CellPair(Cell startCell, Cell endCell, int distance = 0) Parameters Type Name Description Cell startCell The start cell of the path. Cell endCell The end cell of the path. Int32 distance The distance between the start and end cells. Fields endCell The end cell of the path. Declaration public readonly Cell endCell Field Value Type Description Cell startCell The start cell of the path. Declaration public readonly Cell startCell Field Value Type Description Cell Properties HeapIndex Getter and setter for the heap index. Declaration public int HeapIndex { get; set; } Property Value Type Description Int32 Methods CompareTo(CellPair) Used to order the CellPairs in the heap based on the lowest distance first. Declaration public int CompareTo(CellPair otherCell) Parameters Type Name Description CellPair otherCell The cell to compare to. Returns Type Description Int32 Implements IHeapItem<T> IComparable<>"
  },
  "api/Global.Heap-1.html": {
    "href": "api/Global.Heap-1.html",
    "title": "Class Heap<T> | Project documentation",
    "keywords": "Class Heap<T> A binary heap written by Sebastian Lague. Heap video Inheritance Object Heap<T> Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Heap<T> where T : IHeapItem<T> Type Parameters Name Description T The type of object to be sorted in the heap. Constructors Heap(Int32) Constructor taking in the max size of the heap. Declaration public Heap(int maxHeapSize) Parameters Type Name Description Int32 maxHeapSize The maxiumum possible size of the heap. Properties Count Gets the number of items in the heap. Declaration public int Count { get; } Property Value Type Description Int32 Methods Add(T) Adds a new item to the heap and sorts it. Declaration public void Add(T item) Parameters Type Name Description T item The item to be added to the heap. Contains(T) Checks if the given item is in the heap. Declaration public bool Contains(T item) Parameters Type Name Description T item The item to find. Returns Type Description Boolean True if the item is in the heap, false if it is not. getItem(Int32) Retrieve an item from the heap at the given index. Declaration public T getItem(int index) Parameters Type Name Description Int32 index The index position of the item to retrieve. Returns Type Description T RemoveFirst() Removes the first item from the heap and sorts the heap. Declaration public T RemoveFirst() Returns Type Description T The first item in the heap. UpdateItem(T) Updates the heap position of the item given. Declaration public void UpdateItem(T item) Parameters Type Name Description T item The item to update the position for."
  },
  "api/Global.HoverTip.html": {
    "href": "api/Global.HoverTip.html",
    "title": "Class HoverTip | Project documentation",
    "keywords": "Class HoverTip Enables game objects to have text displayed providing useful information when hovered over. Written by following this tutorial. Inheritance Object HoverTip Implements IPointerEnterHandler IPointerExitHandler Namespace : Global Assembly : cs.temp.dll.dll Syntax public class HoverTip : MonoBehaviour Remarks This custom component is given to user interface game object, and is given an associated text to be displayed when the object is hovered over. The IPointerEnterHandler and IPointerExitHandler are used to detect when the mouse enter and exits the gameobject associated with the HoverTip instance. Fields tipToShow The tip text to be displayed in the tip window for the associated object Declaration public string tipToShow Field Value Type Description String Methods OnPointerEnter(PointerEventData) Called when the associated gameobject is entered. Declaration public void OnPointerEnter(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData Provides detailed information about the pointer enter event. OnPointerExit(PointerEventData) Called when the associated gameobject is exited. Declaration public void OnPointerExit(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData Provides detailed information about the pointer exit event. Implements IPointerEnterHandler IPointerExitHandler"
  },
  "api/Global.HoverTipManager.html": {
    "href": "api/Global.HoverTipManager.html",
    "title": "Class HoverTipManager | Project documentation",
    "keywords": "Class HoverTipManager This class is responsible for managing the functionality of the HoverTip . Inheritance Object HoverTipManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class HoverTipManager : MonoBehaviour Fields onMouseHover Delegate for response to the mouse hover over a element. Declaration public static Action<string, Vector2> onMouseHover Field Value Type Description Action < String , Vector2 > onMouseLoseFocus Delegate for response to the mouse no longer hovering over a element. Declaration public static Action onMouseLoseFocus Field Value Type Description Action"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace Global | Project documentation",
    "keywords": "Namespace Global Classes Cell Represents a single space on the map for a tile to be potentially placed. CellPair Represents the start and end cell of a path. Heap<T> A binary heap written by Sebastian Lague. Heap video HoverTip Enables game objects to have text displayed providing useful information when hovered over. Written by following this tutorial. HoverTipManager This class is responsible for managing the functionality of the HoverTip . LakeGenerator LakeOptions Level LevelCameraController Controls the level camera's functionality that is used in the user interface. LevelEditor Responsible for customising the LevelManager inspector window to allow level generation via the inspector. LevelManager Responsible for all operations to do with creating, managing and destroying the level and elements within it. Map Options PathGenerator PlayerController This class is responsible for controlling the player character on the level. PopupManager Called by the user interface to show and hide popups with custom heading and body text. RiverGenerator RiverOptions TerrainGenerator Responsible for generating the terrain. Used by the Level Manager. TerrainOptions TerrainSettings UIManager This class is responsible for managing all operations to do with the user interface. WalkpathGenerator WalkpathPathOptions Structs LakeSettings RiverSettings WalkpathSettings Interfaces IHeapItem<T> An interface to make items in the heap required to store an index which will then be compared by priority for ordering. Enums Cell.CellStatus Enumeration of cell states. Used to distinguish the various cells from eachother. LakeGenerator.MaxLakeSize LakeGenerator.NumberOfLakes RiverGenerator.NumberOfRivers TerrainGenerator.TerrainShape The terrain shape options. TerrainGenerator.TerrainType The terrain type options. WalkpathGenerator.NumberOfWalkpaths"
  },
  "api/Global.IHeapItem-1.html": {
    "href": "api/Global.IHeapItem-1.html",
    "title": "Interface IHeapItem<T> | Project documentation",
    "keywords": "Interface IHeapItem<T> An interface to make items in the heap required to store an index which will then be compared by priority for ordering. Namespace : Global Assembly : cs.temp.dll.dll Syntax public interface IHeapItem<T> Type Parameters Name Description T The type of object to be sorted in the heap. Properties HeapIndex Getter and setter for the heap index. Declaration int HeapIndex { get; set; } Property Value Type Description Int32"
  },
  "api/Global.LakeGenerator.html": {
    "href": "api/Global.LakeGenerator.html",
    "title": "Class LakeGenerator | Project documentation",
    "keywords": "Class LakeGenerator Inheritance Object LakeGenerator Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LakeGenerator Constructors LakeGenerator(SpriteAtlas, List<String>) Declaration public LakeGenerator(SpriteAtlas atlas, List<string> generationInfo) Parameters Type Name Description SpriteAtlas atlas List < String > generationInfo Fields maxLakeSizeCount Declaration public static int maxLakeSizeCount Field Value Type Description Int32 numberOfLakesCount Declaration public static int numberOfLakesCount Field Value Type Description Int32 Methods getTile() Declaration public Tile getTile() Returns Type Description Tile isTouchingSide(Single, Rect) Declaration public bool isTouchingSide(float side, Rect checkLake) Parameters Type Name Description Single side Rect checkLake Returns Type Description Boolean populateCells(Map) Declaration public void populateCells(Map map) Parameters Type Name Description Map map setLakeSettings(LakeSettings) Declaration public void setLakeSettings(LakeSettings lakeSettings) Parameters Type Name Description LakeSettings lakeSettings"
  },
  "api/Global.LakeGenerator.MaxLakeSize.html": {
    "href": "api/Global.LakeGenerator.MaxLakeSize.html",
    "title": "Enum LakeGenerator.MaxLakeSize | Project documentation",
    "keywords": "Enum LakeGenerator.MaxLakeSize Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum MaxLakeSize Fields Name Description Large Medium Small"
  },
  "api/Global.LakeGenerator.NumberOfLakes.html": {
    "href": "api/Global.LakeGenerator.NumberOfLakes.html",
    "title": "Enum LakeGenerator.NumberOfLakes | Project documentation",
    "keywords": "Enum LakeGenerator.NumberOfLakes Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum NumberOfLakes Fields Name Description High Low Medium"
  },
  "api/Global.LakeOptions.html": {
    "href": "api/Global.LakeOptions.html",
    "title": "Class LakeOptions | Project documentation",
    "keywords": "Class LakeOptions Inheritance Object Options LakeOptions Inherited Members Options.sliders Options.inputFields Options.dropdowns Options.toggles Options.toggleOptions Options.terrainType Options.setupSlider(Slider, InputField, Int32, Int32) Options.setupDropdown(Dropdown, List<String>) Options.updateInputField(Slider, InputField) Options.updateSlider(InputField, Slider, Int32, Int32) Options.setupToggle(Toggle, GameObject) Options.toggleOption(Toggle, GameObject) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LakeOptions : Options Methods createUserSettingsFromOptions() Declaration public LakeSettings createUserSettingsFromOptions() Returns Type Description LakeSettings setupUIElements() Declaration public void setupUIElements() updateFields(LakeSettings) Declaration public void updateFields(LakeSettings settings) Parameters Type Name Description LakeSettings settings"
  },
  "api/Global.LakeSettings.html": {
    "href": "api/Global.LakeSettings.html",
    "title": "Struct LakeSettings | Project documentation",
    "keywords": "Struct LakeSettings Namespace : Global Assembly : cs.temp.dll.dll Syntax public struct LakeSettings Constructors LakeSettings(TerrainGenerator.TerrainType) Declaration public LakeSettings(TerrainGenerator.TerrainType tType) Parameters Type Name Description TerrainGenerator.TerrainType tType LakeSettings(TerrainGenerator.TerrainType, Boolean, LakeGenerator.NumberOfLakes, LakeGenerator.MaxLakeSize) Declaration public LakeSettings(TerrainGenerator.TerrainType tType, bool lGenerationEnabled, LakeGenerator.NumberOfLakes lNum, LakeGenerator.MaxLakeSize lMaxSize) Parameters Type Name Description TerrainGenerator.TerrainType tType Boolean lGenerationEnabled LakeGenerator.NumberOfLakes lNum LakeGenerator.MaxLakeSize lMaxSize Fields lGenerationEnabled Declaration public readonly bool lGenerationEnabled Field Value Type Description Boolean lMaxSize Declaration public readonly LakeGenerator.MaxLakeSize lMaxSize Field Value Type Description LakeGenerator.MaxLakeSize lNum Declaration public readonly LakeGenerator.NumberOfLakes lNum Field Value Type Description LakeGenerator.NumberOfLakes tType Declaration public readonly TerrainGenerator.TerrainType tType Field Value Type Description TerrainGenerator.TerrainType"
  },
  "api/Global.Level.html": {
    "href": "api/Global.Level.html",
    "title": "Class Level | Project documentation",
    "keywords": "Class Level Inheritance Object Level Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Level : MonoBehaviour Properties isGenerated Declaration public bool isGenerated { get; } Property Value Type Description Boolean Methods generate(TerrainSettings, RiverSettings, LakeSettings, WalkpathSettings) Declaration public void generate(TerrainSettings terrainSettings, RiverSettings riverSettings, LakeSettings lakeSettings, WalkpathSettings walkpathSettings) Parameters Type Name Description TerrainSettings terrainSettings RiverSettings riverSettings LakeSettings lakeSettings WalkpathSettings walkpathSettings getCellZPosition(Vector2) Declaration public int getCellZPosition(Vector2 worldPos) Parameters Type Name Description Vector2 worldPos Returns Type Description Int32 getGenerationInfo() Declaration public List<string> getGenerationInfo() Returns Type Description List < String > getGridPosition(Vector2Int) Declaration public Vector2 getGridPosition(Vector2Int cellPosition) Parameters Type Name Description Vector2Int cellPosition Returns Type Description Vector2 getRandomCell() Declaration public Vector3Int getRandomCell() Returns Type Description Vector3Int setCameraActive(Boolean) Declaration public void setCameraActive(bool value) Parameters Type Name Description Boolean value setup(Boolean) Declaration public void setup(bool fromInspector = false) Parameters Type Name Description Boolean fromInspector"
  },
  "api/Global.LevelCameraController.html": {
    "href": "api/Global.LevelCameraController.html",
    "title": "Class LevelCameraController | Project documentation",
    "keywords": "Class LevelCameraController Controls the level camera's functionality that is used in the user interface. Inheritance Object LevelCameraController Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LevelCameraController : MonoBehaviour Methods clickAndDrag() Functionality that uses the mouse as input to click and drag the level camera into position. Declaration public void clickAndDrag() recenterCamera() Recenter the camera around the level generated. Declaration public void recenterCamera() scrollZoom() functionality to zoom the level camera using a mouse scrollwheel. zoom out, and ortho size increases, zoom in and ortho size decreases Declaration public void scrollZoom() setOriginalMouseDownPosition() Setter for the LevelCameraController.originalMouseDownPosition , used by the UIManager Declaration public void setOriginalMouseDownPosition() updateCamera(Vector3, Single) Updates the values important for the camera to be position correctly relative to the level generated. Called after a level is generated. Declaration public void updateCamera(Vector3 newlevelCenter, float newOrthoSize) Parameters Type Name Description Vector3 newlevelCenter The center of the new level generated. Single newOrthoSize The new size of the orthographic camera window zoomIn() Zoom into the level generated Declaration public void zoomIn() zoomOut() Zoom out of the level generated Declaration public void zoomOut()"
  },
  "api/Global.LevelEditor.html": {
    "href": "api/Global.LevelEditor.html",
    "title": "Class LevelEditor | Project documentation",
    "keywords": "Class LevelEditor Responsible for customising the LevelManager inspector window to allow level generation via the inspector. Inheritance Object LevelEditor Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LevelEditor : Editor Methods OnInspectorGUI() Function from built in editor class. Implemented to make the custom inspector, adding custom GUI elements. Declaration public override void OnInspectorGUI()"
  },
  "api/Global.LevelManager.html": {
    "href": "api/Global.LevelManager.html",
    "title": "Class LevelManager | Project documentation",
    "keywords": "Class LevelManager Responsible for all operations to do with creating, managing and destroying the level and elements within it. Inheritance Object LevelManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class LevelManager : MonoBehaviour Methods generate(TerrainSettings, RiverSettings, LakeSettings, WalkpathSettings) Generate the level. temporary setup. Declaration public void generate(TerrainSettings terrainSettings, RiverSettings riverSettings, LakeSettings lakeSettings, WalkpathSettings walkpathSettings) Parameters Type Name Description TerrainSettings terrainSettings RiverSettings riverSettings LakeSettings lakeSettings WalkpathSettings walkpathSettings getCellZPosition(Vector2) Declaration public int getCellZPosition(Vector2 worldPos) Parameters Type Name Description Vector2 worldPos Returns Type Description Int32 getGenerationInfo() Declaration public List<string> getGenerationInfo() Returns Type Description List < String > setLevelCameraActive(Boolean) Used by the UI manager to update the level camera's active status when swapping between level generation and demo user interfaces Declaration public void setLevelCameraActive(bool value) Parameters Type Name Description Boolean value The boolean value to set the level camera's active status to. setPlayerActive(Boolean) Used by the UI manager to update the player's active status when swapping between level generation and demo user interfaces Declaration public void setPlayerActive(bool value) Parameters Type Name Description Boolean value The boolean value to set the player's active status to. setupLevelFromInspector() Declaration public void setupLevelFromInspector() setupPlayer() Create the player and put them into the level at the given position. Declaration public void setupPlayer()"
  },
  "api/Global.Map.html": {
    "href": "api/Global.Map.html",
    "title": "Class Map | Project documentation",
    "keywords": "Class Map Inheritance Object Map Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Map Constructors Map(Int32, Int32, TerrainGenerator.TerrainShape, Cell.CellStatus) Declaration public Map(int mapWidth, int mapHeight, TerrainGenerator.TerrainShape shape, Cell.CellStatus status = Cell.CellStatus.ValidCell) Parameters Type Name Description Int32 mapWidth Int32 mapHeight TerrainGenerator.TerrainShape shape Cell.CellStatus status Fields area Declaration public readonly int area Field Value Type Description Int32 height Declaration public readonly int height Field Value Type Description Int32 shape Declaration public readonly TerrainGenerator.TerrainShape shape Field Value Type Description TerrainGenerator.TerrainShape width Declaration public readonly int width Field Value Type Description Int32 Properties terrainCellCount Declaration public int terrainCellCount { get; } Property Value Type Description Int32 Methods addBoundaryCellPosition(Vector2Int) Declaration public void addBoundaryCellPosition(Vector2Int position) Parameters Type Name Description Vector2Int position checkForBoundaryCell(Cell) Declaration public void checkForBoundaryCell(Cell cell) Parameters Type Name Description Cell cell checkForBoundaryCellRandom(Cell) Declaration public void checkForBoundaryCellRandom(Cell cell) Parameters Type Name Description Cell cell getAll() Declaration public Cell[, ] getAll() Returns Type Description Cell [,] getBoundaryCellPositions() Declaration public List<Vector2Int> getBoundaryCellPositions() Returns Type Description List < Vector2Int > getCell(Int32, Int32) Declaration public Cell getCell(int x, int y) Parameters Type Name Description Int32 x Int32 y Returns Type Description Cell getCell(Vector2Int) Declaration public Cell getCell(Vector2Int cellPosition) Parameters Type Name Description Vector2Int cellPosition Returns Type Description Cell getMinDepth(Cell) Declaration public int getMinDepth(Cell currentNode) Parameters Type Name Description Cell currentNode Returns Type Description Int32 getNeighbours(Cell) Declaration public List<Cell> getNeighbours(Cell currentNode) Parameters Type Name Description Cell currentNode Returns Type Description List < Cell > getRandomCell() Declaration public Vector3Int getRandomCell() Returns Type Description Vector3Int getTerrainMinDepth(Cell) Declaration public int getTerrainMinDepth(Cell currentNode) Parameters Type Name Description Cell currentNode Returns Type Description Int32 isBoundaryCell(Cell) Declaration public bool isBoundaryCell(Cell cell) Parameters Type Name Description Cell cell Returns Type Description Boolean isValidCell(Vector2Int) Declaration public bool isValidCell(Vector2Int cellPosition) Parameters Type Name Description Vector2Int cellPosition Returns Type Description Boolean updateCellStatus(Cell, Cell.CellStatus, Boolean) Declaration public void updateCellStatus(Cell currentCell, Cell.CellStatus status, bool intersectionsEnabled = false) Parameters Type Name Description Cell currentCell Cell.CellStatus status Boolean intersectionsEnabled"
  },
  "api/Global.Options.html": {
    "href": "api/Global.Options.html",
    "title": "Class Options | Project documentation",
    "keywords": "Class Options Inheritance Object Options LakeOptions RiverOptions TerrainOptions WalkpathPathOptions Namespace : Global Assembly : cs.temp.dll.dll Syntax public class Options Fields dropdowns Declaration protected List<Dropdown> dropdowns Field Value Type Description List < Dropdown > inputFields Declaration protected List<InputField> inputFields Field Value Type Description List < InputField > sliders Declaration protected List<Slider> sliders Field Value Type Description List < Slider > terrainType Declaration protected static TerrainGenerator.TerrainType terrainType Field Value Type Description TerrainGenerator.TerrainType toggleOptions Declaration protected List<GameObject> toggleOptions Field Value Type Description List < GameObject > toggles Declaration protected List<Toggle> toggles Field Value Type Description List < Toggle > Methods setupDropdown(Dropdown, List<String>) Declaration protected void setupDropdown(Dropdown dropdown, List<string> options) Parameters Type Name Description Dropdown dropdown List < String > options setupSlider(Slider, InputField, Int32, Int32) Declaration protected void setupSlider(Slider slider, InputField input, int minValue, int maxValue) Parameters Type Name Description Slider slider InputField input Int32 minValue Int32 maxValue setupToggle(Toggle, GameObject) Declaration protected void setupToggle(Toggle toggle, GameObject option) Parameters Type Name Description Toggle toggle GameObject option toggleOption(Toggle, GameObject) Declaration public void toggleOption(Toggle toggle, GameObject option) Parameters Type Name Description Toggle toggle GameObject option updateInputField(Slider, InputField) Declaration public void updateInputField(Slider slider, InputField input) Parameters Type Name Description Slider slider InputField input updateSlider(InputField, Slider, Int32, Int32) Called anytime an input field has been edited to ensure the input is valid and the slider is updated to reflect the input field. Declaration public void updateSlider(InputField input, Slider slider, int minValue, int maxValue) Parameters Type Name Description InputField input Slider slider Int32 minValue Int32 maxValue"
  },
  "api/Global.PathGenerator.html": {
    "href": "api/Global.PathGenerator.html",
    "title": "Class PathGenerator | Project documentation",
    "keywords": "Class PathGenerator Inheritance Object PathGenerator RiverGenerator WalkpathGenerator Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PathGenerator Fields statusToCheck Declaration protected Cell.CellStatus statusToCheck Field Value Type Description Cell.CellStatus Methods findAStarPath(Map, Cell, Cell, Cell.CellStatus, Boolean) Declaration protected bool findAStarPath(Map map, Cell startNode, Cell endNode, Cell.CellStatus status, bool intersectionsEnabled) Parameters Type Name Description Map map Cell startNode Cell endNode Cell.CellStatus status Boolean intersectionsEnabled Returns Type Description Boolean getReachableCells(Map, List<Vector2Int>, Heap<CellPair>, Boolean) Declaration protected CellPair getReachableCells(Map map, List<Vector2Int> boundaryCellList, Heap<CellPair> cellPairs, bool intersectionsEnabled) Parameters Type Name Description Map map List < Vector2Int > boundaryCellList Heap < CellPair > cellPairs Boolean intersectionsEnabled Returns Type Description CellPair"
  },
  "api/Global.PlayerController.html": {
    "href": "api/Global.PlayerController.html",
    "title": "Class PlayerController | Project documentation",
    "keywords": "Class PlayerController This class is responsible for controlling the player character on the level. Inheritance Object PlayerController Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PlayerController : MonoBehaviour Methods clearDoMovement() Declaration public void clearDoMovement() setDoMovement(Boolean) Declaration public void setDoMovement(bool rangeHeightEnabled) Parameters Type Name Description Boolean rangeHeightEnabled setLevelManager(LevelManager) Declaration public void setLevelManager(LevelManager levelManager) Parameters Type Name Description LevelManager levelManager setWorldPosition(Vector2) Declaration public void setWorldPosition(Vector2 newWorldpos) Parameters Type Name Description Vector2 newWorldpos updatePlayerPosition(Int32) Declaration public void updatePlayerPosition(int zValue) Parameters Type Name Description Int32 zValue"
  },
  "api/Global.PopupManager.html": {
    "href": "api/Global.PopupManager.html",
    "title": "Class PopupManager | Project documentation",
    "keywords": "Class PopupManager Called by the user interface to show and hide popups with custom heading and body text. Inheritance Object PopupManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PopupManager : MonoBehaviour Methods hidePopup() Deactivates the popup. Declaration public void hidePopup() showPopup(String, String) Activates the popup with the given heading and body text. Declaration public void showPopup(string messageHeading, string messageBody) Parameters Type Name Description String messageHeading The heading of the popup to be shown. String messageBody The body message of the popup to be shown."
  },
  "api/Global.RiverGenerator.html": {
    "href": "api/Global.RiverGenerator.html",
    "title": "Class RiverGenerator | Project documentation",
    "keywords": "Class RiverGenerator Inheritance Object PathGenerator RiverGenerator Inherited Members PathGenerator.statusToCheck PathGenerator.getReachableCells(Map, List<Vector2Int>, Heap<CellPair>, Boolean) PathGenerator.findAStarPath(Map, Cell, Cell, Cell.CellStatus, Boolean) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class RiverGenerator : PathGenerator Constructors RiverGenerator(SpriteAtlas, List<String>) Declaration public RiverGenerator(SpriteAtlas atlas, List<string> generationInfo) Parameters Type Name Description SpriteAtlas atlas List < String > generationInfo Fields numberOfRiversCount Declaration public static int numberOfRiversCount Field Value Type Description Int32 Methods getTile() Declaration public Tile getTile() Returns Type Description Tile populateCells(Map) Declaration public void populateCells(Map map) Parameters Type Name Description Map map setRiverSettings(RiverSettings) Declaration public void setRiverSettings(RiverSettings riverSettings) Parameters Type Name Description RiverSettings riverSettings"
  },
  "api/Global.RiverGenerator.NumberOfRivers.html": {
    "href": "api/Global.RiverGenerator.NumberOfRivers.html",
    "title": "Enum RiverGenerator.NumberOfRivers | Project documentation",
    "keywords": "Enum RiverGenerator.NumberOfRivers Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum NumberOfRivers Fields Name Description High Low Medium"
  },
  "api/Global.RiverOptions.html": {
    "href": "api/Global.RiverOptions.html",
    "title": "Class RiverOptions | Project documentation",
    "keywords": "Class RiverOptions Inheritance Object Options RiverOptions Inherited Members Options.sliders Options.inputFields Options.dropdowns Options.toggles Options.toggleOptions Options.terrainType Options.setupSlider(Slider, InputField, Int32, Int32) Options.setupDropdown(Dropdown, List<String>) Options.updateInputField(Slider, InputField) Options.updateSlider(InputField, Slider, Int32, Int32) Options.setupToggle(Toggle, GameObject) Options.toggleOption(Toggle, GameObject) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class RiverOptions : Options Methods createUserSettingsFromOptions() Declaration public RiverSettings createUserSettingsFromOptions() Returns Type Description RiverSettings setupUIElements() Declaration public void setupUIElements() updateFields(RiverSettings) Declaration public void updateFields(RiverSettings settings) Parameters Type Name Description RiverSettings settings"
  },
  "api/Global.RiverSettings.html": {
    "href": "api/Global.RiverSettings.html",
    "title": "Struct RiverSettings | Project documentation",
    "keywords": "Struct RiverSettings Namespace : Global Assembly : cs.temp.dll.dll Syntax public struct RiverSettings Constructors RiverSettings(TerrainGenerator.TerrainType) Declaration public RiverSettings(TerrainGenerator.TerrainType tType) Parameters Type Name Description TerrainGenerator.TerrainType tType RiverSettings(TerrainGenerator.TerrainType, Boolean, RiverGenerator.NumberOfRivers, Boolean) Declaration public RiverSettings(TerrainGenerator.TerrainType tType, bool rGenerationEnabled, RiverGenerator.NumberOfRivers rNum, bool intersectionsEnabled) Parameters Type Name Description TerrainGenerator.TerrainType tType Boolean rGenerationEnabled RiverGenerator.NumberOfRivers rNum Boolean intersectionsEnabled Fields intersectionsEnabled Declaration public readonly bool intersectionsEnabled Field Value Type Description Boolean rGenerationEnabled Declaration public readonly bool rGenerationEnabled Field Value Type Description Boolean rNum Declaration public readonly RiverGenerator.NumberOfRivers rNum Field Value Type Description RiverGenerator.NumberOfRivers tType Declaration public readonly TerrainGenerator.TerrainType tType Field Value Type Description TerrainGenerator.TerrainType"
  },
  "api/Global.TerrainGenerator.html": {
    "href": "api/Global.TerrainGenerator.html",
    "title": "Class TerrainGenerator | Project documentation",
    "keywords": "Class TerrainGenerator Responsible for generating the terrain. Used by the Level Manager. Inheritance Object TerrainGenerator Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TerrainGenerator Constructors TerrainGenerator(SpriteAtlas, List<String>) Declaration public TerrainGenerator(SpriteAtlas atlas, List<string> generationInfo) Parameters Type Name Description SpriteAtlas atlas List < String > generationInfo Fields terrainMaxHeight Declaration public const int terrainMaxHeight = 5 Field Value Type Description Int32 terrainMaxSize The maximum size of a level specified by tile count. Declaration public const int terrainMaxSize = 1500 Field Value Type Description Int32 terrainMinHeight Declaration public const int terrainMinHeight = 0 Field Value Type Description Int32 terrainMinSize The minimum size of a level specified by tile count. Declaration public const int terrainMinSize = 50 Field Value Type Description Int32 terrainShapeCount Declaration public static int terrainShapeCount Field Value Type Description Int32 terrainTypeCount Declaration public static int terrainTypeCount Field Value Type Description Int32 Methods createMap() Declaration public Map createMap() Returns Type Description Map getAccessoryTiles() Declaration public Tile[] getAccessoryTiles() Returns Type Description Tile [] getGroundTiles() Declaration public Tile[] getGroundTiles() Returns Type Description Tile [] getLowerGroundTile() Declaration public Tile getLowerGroundTile() Returns Type Description Tile populateCells(Map) Declaration public void populateCells(Map map) Parameters Type Name Description Map map setOuterBounds(Map, ref List<Vector3Int>, ref List<TileBase>, ref List<Vector3Int>, ref List<TileBase>) Declaration public void setOuterBounds(Map map, ref List<Vector3Int> positions, ref List<TileBase> tiles, ref List<Vector3Int> positions2, ref List<TileBase> tiles2) Parameters Type Name Description Map map List < Vector3Int > positions List < TileBase > tiles List < Vector3Int > positions2 List < TileBase > tiles2 setTerrainSettings(TerrainSettings) Declaration public void setTerrainSettings(TerrainSettings terrainSettings) Parameters Type Name Description TerrainSettings terrainSettings"
  },
  "api/Global.TerrainGenerator.TerrainShape.html": {
    "href": "api/Global.TerrainGenerator.TerrainShape.html",
    "title": "Enum TerrainGenerator.TerrainShape | Project documentation",
    "keywords": "Enum TerrainGenerator.TerrainShape The terrain shape options. Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum TerrainShape Fields Name Description Random Rectangle Square"
  },
  "api/Global.TerrainGenerator.TerrainType.html": {
    "href": "api/Global.TerrainGenerator.TerrainType.html",
    "title": "Enum TerrainGenerator.TerrainType | Project documentation",
    "keywords": "Enum TerrainGenerator.TerrainType The terrain type options. Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum TerrainType Fields Name Description Dessert Greenery Lava Skin Snow"
  },
  "api/Global.TerrainOptions.html": {
    "href": "api/Global.TerrainOptions.html",
    "title": "Class TerrainOptions | Project documentation",
    "keywords": "Class TerrainOptions Inheritance Object Options TerrainOptions Inherited Members Options.sliders Options.inputFields Options.dropdowns Options.toggles Options.toggleOptions Options.terrainType Options.setupSlider(Slider, InputField, Int32, Int32) Options.setupDropdown(Dropdown, List<String>) Options.updateInputField(Slider, InputField) Options.updateSlider(InputField, Slider, Int32, Int32) Options.setupToggle(Toggle, GameObject) Options.toggleOption(Toggle, GameObject) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TerrainOptions : Options Methods createUserSettingsFromOptions() Declaration public TerrainSettings createUserSettingsFromOptions() Returns Type Description TerrainSettings setupUIElements() Declaration public void setupUIElements() updateFields(TerrainSettings) Declaration public void updateFields(TerrainSettings settings) Parameters Type Name Description TerrainSettings settings updateTerrainSizeField(Int32) Declaration public void updateTerrainSizeField(int size) Parameters Type Name Description Int32 size"
  },
  "api/Global.TerrainSettings.html": {
    "href": "api/Global.TerrainSettings.html",
    "title": "Class TerrainSettings | Project documentation",
    "keywords": "Class TerrainSettings Inheritance Object TerrainSettings Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TerrainSettings Constructors TerrainSettings() Declaration public TerrainSettings() TerrainSettings(TerrainGenerator.TerrainType, Boolean, Int32, TerrainGenerator.TerrainShape, Int32, Int32, Int32) Declaration public TerrainSettings(TerrainGenerator.TerrainType tType, bool heightRangeEnabled, int tSize, TerrainGenerator.TerrainShape tShape, int tMinHeight, int tMaxHeight, int tExactHeight) Parameters Type Name Description TerrainGenerator.TerrainType tType Boolean heightRangeEnabled Int32 tSize TerrainGenerator.TerrainShape tShape Int32 tMinHeight Int32 tMaxHeight Int32 tExactHeight Fields heightRangeEnabled Declaration public readonly bool heightRangeEnabled Field Value Type Description Boolean tExactHeight Declaration public readonly int tExactHeight Field Value Type Description Int32 tMaxHeight Declaration public readonly int tMaxHeight Field Value Type Description Int32 tMinHeight Declaration public readonly int tMinHeight Field Value Type Description Int32 tShape Declaration public readonly TerrainGenerator.TerrainShape tShape Field Value Type Description TerrainGenerator.TerrainShape tType Declaration public readonly TerrainGenerator.TerrainType tType Field Value Type Description TerrainGenerator.TerrainType Properties tSize Declaration public int tSize { get; } Property Value Type Description Int32 Methods heightRangeIsOnAndInvalid() Declaration public bool heightRangeIsOnAndInvalid() Returns Type Description Boolean updateTerrainSize(Int32) Declaration public void updateTerrainSize(int tSize) Parameters Type Name Description Int32 tSize"
  },
  "api/Global.UIManager.html": {
    "href": "api/Global.UIManager.html",
    "title": "Class UIManager | Project documentation",
    "keywords": "Class UIManager This class is responsible for managing all operations to do with the user interface. Inheritance Object UIManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class UIManager : MonoBehaviour Methods closePopup() Closes an opened popup. Used by the close button on the popup panel Declaration public void closePopup() demoLevel() Switch to the demo mode for the level generated. Declaration public void demoLevel() exitLevel() Returns the user back to the level generation user interface from the demo user interface. Declaration public void exitLevel() generateLevel() Tell the level manager to generate the level. Declaration public void generateLevel() generateRandomLevel() Tell the level manager to generate the level with randomised settings. Declaration public void generateRandomLevel() recenterCamera() Tell the level camera to recenter around the level. Declaration public void recenterCamera() showLevelInfo() Declaration public void showLevelInfo() zoomIn() Tell the level camera to zoom into the level. Declaration public void zoomIn() zoomOut() Tell the level camera to zoom out of the level. Declaration public void zoomOut()"
  },
  "api/Global.WalkpathGenerator.html": {
    "href": "api/Global.WalkpathGenerator.html",
    "title": "Class WalkpathGenerator | Project documentation",
    "keywords": "Class WalkpathGenerator Inheritance Object PathGenerator WalkpathGenerator Inherited Members PathGenerator.statusToCheck PathGenerator.getReachableCells(Map, List<Vector2Int>, Heap<CellPair>, Boolean) PathGenerator.findAStarPath(Map, Cell, Cell, Cell.CellStatus, Boolean) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class WalkpathGenerator : PathGenerator Constructors WalkpathGenerator(SpriteAtlas, List<String>) Declaration public WalkpathGenerator(SpriteAtlas atlas, List<string> generationInfo) Parameters Type Name Description SpriteAtlas atlas List < String > generationInfo Fields numberOfWalkpathsCount Declaration public static int numberOfWalkpathsCount Field Value Type Description Int32 Methods getTile() Declaration public Tile getTile() Returns Type Description Tile populateCells(Map) Declaration public void populateCells(Map map) Parameters Type Name Description Map map setWalkpathSettings(WalkpathSettings) Declaration public void setWalkpathSettings(WalkpathSettings walkpathSettings) Parameters Type Name Description WalkpathSettings walkpathSettings"
  },
  "api/Global.WalkpathGenerator.NumberOfWalkpaths.html": {
    "href": "api/Global.WalkpathGenerator.NumberOfWalkpaths.html",
    "title": "Enum WalkpathGenerator.NumberOfWalkpaths | Project documentation",
    "keywords": "Enum WalkpathGenerator.NumberOfWalkpaths Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum NumberOfWalkpaths Fields Name Description High Low Medium"
  },
  "api/Global.WalkpathPathOptions.html": {
    "href": "api/Global.WalkpathPathOptions.html",
    "title": "Class WalkpathPathOptions | Project documentation",
    "keywords": "Class WalkpathPathOptions Inheritance Object Options WalkpathPathOptions Inherited Members Options.sliders Options.inputFields Options.dropdowns Options.toggles Options.toggleOptions Options.terrainType Options.setupSlider(Slider, InputField, Int32, Int32) Options.setupDropdown(Dropdown, List<String>) Options.updateInputField(Slider, InputField) Options.updateSlider(InputField, Slider, Int32, Int32) Options.setupToggle(Toggle, GameObject) Options.toggleOption(Toggle, GameObject) Namespace : Global Assembly : cs.temp.dll.dll Syntax public class WalkpathPathOptions : Options Methods createUserSettingsFromOptions() Declaration public WalkpathSettings createUserSettingsFromOptions() Returns Type Description WalkpathSettings setupUIElements() Declaration public void setupUIElements() updateFields(WalkpathSettings) Declaration public void updateFields(WalkpathSettings settings) Parameters Type Name Description WalkpathSettings settings"
  },
  "api/Global.WalkpathSettings.html": {
    "href": "api/Global.WalkpathSettings.html",
    "title": "Struct WalkpathSettings | Project documentation",
    "keywords": "Struct WalkpathSettings Namespace : Global Assembly : cs.temp.dll.dll Syntax public struct WalkpathSettings Constructors WalkpathSettings(TerrainGenerator.TerrainType) Declaration public WalkpathSettings(TerrainGenerator.TerrainType tType) Parameters Type Name Description TerrainGenerator.TerrainType tType WalkpathSettings(TerrainGenerator.TerrainType, Boolean, WalkpathGenerator.NumberOfWalkpaths, Boolean) Declaration public WalkpathSettings(TerrainGenerator.TerrainType tType, bool wGenerationEnabled, WalkpathGenerator.NumberOfWalkpaths wNum, bool intersectionsEnabled) Parameters Type Name Description TerrainGenerator.TerrainType tType Boolean wGenerationEnabled WalkpathGenerator.NumberOfWalkpaths wNum Boolean intersectionsEnabled Fields intersectionsEnabled Declaration public readonly bool intersectionsEnabled Field Value Type Description Boolean tType Declaration public readonly TerrainGenerator.TerrainType tType Field Value Type Description TerrainGenerator.TerrainType wGenerationEnabled Declaration public readonly bool wGenerationEnabled Field Value Type Description Boolean wNum Declaration public readonly WalkpathGenerator.NumberOfWalkpaths wNum Field Value Type Description WalkpathGenerator.NumberOfWalkpaths"
  },
  "index.html": {
    "href": "index.html",
    "title": "2D Isometric Procedural Content Generation System in Unity | Project documentation",
    "keywords": "2D Isometric Procedural Content Generation System in Unity Explain what the project is here. Use the example below to apply correct formatting. DocFX for Unity DocFX usage example for Unity projects DocFX tool generates a clean documentation that looks like the Unity documentation with a manual (written in Markdown) and a scripting API (from the C# scripts of the project). This repository contains a simple Unity example project which documentation is automatically generated and deployed online: https://normanderwan.github.io/DocFxForUnity/ . It references both C# API and Unity API. DocFxForUnity documentation manual DocFxForUnity documentation scripting API Setup your documentation Install DocFX . Copy the Documentation/ folder to your Unity project: . ├── Assets + ├── Documentation ├── Package ├── ProjectSettings └── README.md Edit the following properties in Documentation/docfx.json , keep the others as it is: { \"build\": { \"globalMetadata\": // Edit your documentation website info, see: https://dotnet.github.io/docfx/tutorial/docfx.exe_user_manual.html#322-reserved-metadata { \"_appTitle\": \"Example Unity documentation\", \"_appFooter\": \"Example Unity documentation\", \"_enableSearch\": true }, \"sitemap\": { \"baseUrl\": \"https://normanderwan.github.io/DocFxForUnity\" // The URL of your documentation website } } It's the configuration file of your documentation. See https://dotnet.github.io/docfx/tutorial/docfx.exe_user_manual.html#3-docfxjson-format for more details. Edit Documentation/filterConfig.yml : apiRules: - include: # The namespaces to generate uidRegex: ^Your\\.Namespace1 type: Namespace - include: uidRegex: ^Your\\.Namespace2 type: Namespace - exclude: uidRegex: .* # Every other namespaces are ignored type: Namespace It tells DocFX which namespaces you want to generate the documentation. See https://dotnet.github.io/docfx/tutorial/howto_filter_out_unwanted_apis_attributes.html for more details. Document your classes and methods. See https://docs.microsoft.com/en-us/dotnet/csharp/codedoc for more details. (Optional) Add your manual pages: Write a Markdown file for each page in Documentation/manual/ . Keep a list of these pages on Documentation/manual/toc.yml . (Optional) Add resources such as images: Copy them to Documentation/resources/ . Reference them on your docs or manual pages. See https://dotnet.github.io/docfx/tutorial/links_and_cross_references.html#link-to-a-file-using-relative-path for more details. (Optional) Document your namespaces: For each namespace, add a Assets/Scripts/Your/Namespace1/Your.Namespace1.md file: --- uid: Your.Namespace1 summary: Description of the Your.Namespace1 namespace. --- See https://dotnet.github.io/docfx/tutorial/intro_overwrite_files.html to know how it works. Generate your documentation: On a command line opened on your project, run: cp README.md Documentation/index.md docfx Documentation/docfx.json --serve The generated website will be visible at http://localhost:8080 . If you want to have a more similar look to the Unity documentation, see this UnityFX template for DocFX: https://github.com/code-beans/UnityFX . Generate automatically your documentation If you're using GitHub: Copy the .github/workflows/documentation.yml workflow to your Unity project: . + ├── .github + | └── workflows + | └── documentation.yml ├── Assets ├── Documentation ├── Package ├── ProjectSettings └── README.md Next push on main branch will build and deploy your documentation to https://<USERNAME>.github.io/<REPOSITORY>/ ! If you're using GitLab, use the provided .gitlab-ci.yml . Generated website is pushed to a public/ directory. See the GitLab Pages documentation for more details. Troubleshooting / FAQ DocFX outputs: Warning:[ExtractMetadata]No project detected for extracting metadata. Solution: On Unity, click Asset > Open C# Project to generate the required .csproj . DocFX outputs: Warning:[ExtractMetadata]No metadata is generated for Assembly-CSharp,Assembly-CSharp-Editor. Solution: Make sure your included your namespace in Documentation/filterConfig.yml : - include: uidRegex: ^Your\\.Namespace1 type: Namespace If you want to reference a specific version of Unity, change this line on your docfx.json : \"xref\": [ \"https://normanderwan.github.io/UnityXrefMaps/<version>/xrefmap.yml\" ], where <version> is a Unity version in the form of YYYY.x ( e.g. 2017.4, 2018.4, 2019.3). Disclaimer This repository is not sponsored by or affiliated with Unity Technologies or its affiliates. “Unity” is a trademark or registered trademark of Unity Technologies or its affiliates in the U.S. and elsewhere."
  },
  "manual/coniunctis.html": {
    "href": "manual/coniunctis.html",
    "title": "Coniunctis nec qui et lanient monticolae vitae | Project documentation",
    "keywords": "Coniunctis nec qui et lanient monticolae vitae Opem ille Lorem markdownum cavis exululat inutile. Illi quem caeli, vola patruo difficili Iuppiter Patraeque, est ardebant ingeniis Troica intus Amore tibi mirantem superfusis, multum. Ut Achilles Et sitim Tibi modo ait temptant crinita daret Pariter in removi offensasque Lenaeo damno terra Phoebes ut damnosa classis ignes templo; tua ulla capillos ultima. Videre percusso plectro templa fuit diva minimum debere, quid nomen Philomela animis. Verbis istis flagrat vulnera inpediique ignes. Gravi filo obvius arte Amphionis Panes emisitque iubet. Latona te timens Latentia ante, eundem meritorum sunto ! Elige in timuit templa ferrea, qui arma ligati stagnum turbant. Fraternaque aeternus, dedisse, naufragus corripiens ranas Amathunta et quod laetior culpa nec semper scorpius fuit vicem corpora ardere. Fallit in artus primordia, fratres per aliis , ipsi manu Asiae quod marmorea . mountain(googleVga, pngIphone); var radcabBitrate = dnsCronRecursion; gui(2); ipImageAix += vle(drm_cisc, horizontal + computer_key); jre(vaporware_adc_multi); Lumina ut tamen praesentia vidistis nymphae auroque Bromumque in portant furorem. Visa init resurgere praevitiat canibus et, dedignata turea, ilia. Pisenore mensura insula aere nec per o gladium causa: Alcidae. Veris sentes pallet, alta melius nostra amborum probant, deam. Iuventae dedimus nitidaque hunc traxisse sermonibus pectine flecti an pateres, hac ore gelidis foret semper. Sithon pelle. Bracchia Hippason videntur fateri hosti: palpitat animo est reliquit anne nam confusaque. Interea rex altis munera quem quae quoque rorant, rauco albescere scopulo moriensque parvo, pectus illa, quadrupedes. Notavit haec. Vertit pars quem Euryte casu usta iterum! Ablatum pectus corripiunt neu humus tamquam; ducens stellarum amore. Pulsisque latet, ad tamen victor fulva Tirynthius posco; qui inque in poena quidem enses !"
  },
  "manual/etiam.html": {
    "href": "manual/etiam.html",
    "title": "Etiam nantemque exul | Project documentation",
    "keywords": "Etiam nantemque exul Cum tulit Lorem markdownum quos stimulosque altos . Putat nubes molle Troiae vero dea; nostraque plurima . Vos de mihi, credidit: salibus et iacuit, volvitur sunt unda fronti deriguisse refert . Sumpsisse viso Nubila nomine. Purpura se o et causa parva ripas, adsonat saevaque; quid modo ambo et venere voveo. Sine et esse, illa tempore, sive tibi roseo, ministerio altos. Trepident medicamine, primasque cum et peregit dapibusque quoslibet hominis quoque insula. Tepentibus ut Cecropios ab turba, est auro ferventi aliter duratos feres differtis Ausoniis potes, non noctis Laertaque iuvenes. Caelumque vestigia Et promissa fila sentiet leges; Phrygiae et levatus ferire? Salutifer coniugis fierent ante fecissent post vultumque ultima, per radios currere; tandem. Fuerat qua, ne foedera reformatus nunc diu dea audet nonne. Ut utinam mitia tenuerunt movent spectans Mavortis nulla ite, somnos exsiccata dixit Aeetias. Binas Trinacriam album ex ipse. Quoque una utraque tardius placetque gerere; mariti sed dare ludunt memorante Delphice corpora. Caret quantum intellegat venis gaudent eurus. Et suos crista; has et ferarum quid audit omine; mea cum praemia quae duris, suspicor. Adflati qui Spiro conata supprimit diemque; ora oblitus ensem alti non quo lacrimis ferunt, ageret Cebrenida rutilis delendaque? Terras lata modus: nec fas, misi utque adpositis Iunonis. Fide vidit, ferox Schoeneia mundi, voce, tellus pariterque pedum, sic Celadon securior corpora partesque posito. Potest faxo unda pendulaque ille rostro, haesit pars: formidine captat, viseret simulaverat! Sequi est peragit flumineae pallent simulatas formae avulsa, imagine undis; formam. Et nec sed adeunt, huic aequa et ignes nec, medere terram. Move ipsum abnuat retemptat retinebat duabus diu Iovi est pluma. Tecum non deducit Pelops Inachus: arcet aliquemque, regia telo. Tollens altore nec semel qui voce Palatinae Apertis et dei duo inquit ; luna secundo, fervida terret. In haec dextra septima Tydides tibi: congelat hospes nativum radice tegumenque membris Hesperio ne Libys, est vocabula siqua. Dumque stet mulces , ut fontem dea atricolor, est pronos, clarissimus poterat cum intrare sidere templi. cut_metadata(whitelistSequenceUnit.thick.of_bezel_cdma( address_suffix_troubleshooting), sram_trojan(4, hdmi_network - 1)); flash.apache -= web_gps_plug; if (offline.dac_bridge(scrollEbookRom, parameter.internal_target_superscalar(2)) < qwerty + 2 - ipvCgiContextual) { certificateIdeAsp = overclocking + app; supplyCard = siteRaster; } Sagitta curvum quoque petisti opibusque proximitas in, illa vestrum, mihi domum nescia flexit sacra in. Magni vive sim crescente causam saxo voluit, mens, quod. Tela ter ulterius similis illos nato refugit ait verbaque nec fatigatum penates iaculatricemque cecidit pinnas, cum. Misso contigit caelo dedissent lumina; nympha ad vobis occidat, malo sacra utrumque cunctos Diomedeos addita. Virgineus autumnos, ait mitissima curru: fuit sed fessi se habebat hactenus Ultor; meus."
  }
}